import Head from 'next/head';
import Cards from '../components/Cards';
import History from '../components/History';
import Navbar from '../components/Navbar';
import SearchBar from '../components/SearchBar';
import styles from '../styles/Home.module.scss';
import { useGetAllTransactions } from '../utils/api';
import Skeleton from 'react-loading-skeleton';
import 'react-loading-skeleton/dist/skeleton.css';
import { useSelector } from 'react-redux';
import { useState } from 'react';
import TransactionTable from '../components/TransactionTable';

export default function Home() {
  const [search, setSearch] = useState('');
  const { structuredData } = useSelector((state) => state.app);
  const { allTransactions, isLoadingAllTransactions } = useGetAllTransactions();

  console.log(allTransactions);

  return (
    <div className={styles.container}>
      <Head>
        <title>Bridge</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Navbar />

      <div style={{ padding: '24px 50px 50px 50px' }}>
        {allTransactions && (
          <>
            <SearchBar search={search} setSearch={setSearch} />

            {!search.length && (
              <>
                <Cards total={allTransactions.transactions.total} />

                <div style={{ width: '30px', height: '30px' }}></div>

                <div
                  style={{
                    marginTop: '56px',
                    display: 'flex',
                    justifyContent: 'space-between',
                  }}
                >
                  <History
                    name='Latest Transactions'
                    data={structuredData?.success?.slice(0, 7)}
                    transaction={true}
                  />
                  <History
                    name='Pending Transactions'
                    data={structuredData?.pending?.slice(0, 7)}
                    transaction={false}
                  />
                </div>
              </>
            )}

            {search.length > 0 && (
              <TransactionTable
              // data={data}
              // lastPage={allTransactions?.transactions?.last_page}
              // isLoading={isLoadingAllTransactions}
              // page={page}
              // limit={limit}
              // setPage={setPage}
              // setLimit={setLimit}
              />
            )}
          </>
        )}
      </div>
    </div>
  );
}
